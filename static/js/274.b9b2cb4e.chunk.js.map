{"version":3,"file":"static/js/274.b9b2cb4e.chunk.js","mappings":"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","sources":["Services/api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Reusable Components/Loader/Loader.jsx","components/TopRatedMovies/TopRatedMovies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86633d198b2023a18dd77350f0e9072';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchUpcomingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/movie/upcoming/?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchTopRatedMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/movie/top_rated/?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviebyId(movieId) {\n  const trendingMovies = await fetchTrendingMovies();\n  return trendingMovies.find(movie => movie.id === movieId);\n}\n\nexport async function fetchConfig() {\n  const response = await axios.get(\n    `${BASE_URL}configuration?api_key=${API_KEY}`\n  );\n  return response.data.images;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      append_to_response: 'credits,reviews,videos',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  margin-top: ${p => p.theme.space[5]}px;\n\n  @media screen and (min-width: ${p => p.theme.sizes.pc}) {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: ${p => p.theme.space[5]}px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  @media screen and (max-width: ${p => p.theme.sizes.phone}) {\n    :not(:last-child) {\n      margin-bottom: ${p => p.theme.space[5]}px;\n    }\n  }\n`;\n\nexport const Wraper = styled.div`\n  position: relative;\n  border-radius: 20px 20px 20px 20px;\n  border: 1px solid ${p => p.theme.colors.text};\n  overflow: hidden;\n  height: max-content;\n  width: max-content;\n  margin-left: auto;\n  margin-right: auto;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1), scale 250ms;\n  :hover,\n  :focus {\n    box-shadow: 0px 2px 2px rgba(255, 255, 255, 0.12),\n      0px 5px 5px rgba(255, 255, 255, 0.06),\n      2px 5px 7px rgba(255, 255, 255, 0.16);\n    scale: 103%;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  color: rgba(240, 240, 240, 0.9);\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  background-color: rgba(240, 240, 240, 0.6); ;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { Wraper, ListItem, MovieInfo, List } from './MoviesList.styled';\n\nfunction MoviesList({ movies, config }) {\n  const location = useLocation();\n  console.log('location', location);\n  return (\n    <List>\n      {movies.length > 0 &&\n        movies.map(movie => (\n          <ListItem key={movie.id}>\n            <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <Wraper>\n                <img\n                  alt={movie.title}\n                  src={`${config.base_url}${config.poster_sizes[3]}${movie.poster_path}`}\n                />\n                <MovieInfo style={{ position: 'absolute', zIndex: 1000 }}>\n                  <p>{movie.title}</p>\n                </MovieInfo>\n              </Wraper>\n            </NavLink>\n          </ListItem>\n        ))}\n    </List>\n  );\n}\n\nexport default MoviesList;\n","import { FidgetSpinner } from 'react-loader-spinner';\nimport { Box } from 'components/Reusable Components/Box';\nimport { Text } from 'components/Reviews/Reviews.styled';\n\nconst Loader = () => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Text>Loading . . .</Text>\n      <FidgetSpinner backgroundColor=\"green\" />\n    </Box>\n  );\n};\n\nexport default Loader;\n","import { fetchConfig, fetchTopRatedMovies } from '../../Services/api';\nimport { useEffect, useState } from 'react';\nimport Loader from 'components/Reusable Components/Loader';\nimport MoviesList from 'components/MoviesList';\n\nfunction TopRatedMovies() {\n  const [movies, setMovies] = useState([]);\n  const [config, setConfig] = useState(null);\n  console.log('movies', movies);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const trendingMovies = await fetchTopRatedMovies();\n        const config = await fetchConfig();\n        setConfig(config);\n        setMovies(trendingMovies);\n        setLoading(false);\n      } catch (error) {\n        console.warn(error);\n      }\n\n      // console.log('TrandingMovies', TrandingMovies);\n      // console.log('fetchTrendingMovies();', fetchTrendingMovies());\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {loading && <Loader></Loader>}\n      <MoviesList movies={movies} config={config}></MoviesList>\n    </>\n  );\n}\nexport default TopRatedMovies;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchUpcomingMovies","fetchTopRatedMovies","fetchConfig","images","fetchMovieDetails","movieId","params","api_key","language","append_to_response","fetchMovieByQuery","query","List","styled","p","theme","space","sizes","pc","ListItem","phone","Wraper","colors","text","MovieInfo","movies","config","location","useLocation","console","log","length","map","movie","to","id","state","from","alt","title","src","base_url","poster_sizes","poster_path","style","position","zIndex","Box","display","alignItems","justifyContent","backgroundColor","useState","setMovies","setConfig","loading","setLoading","useEffect","fetchData","trendingMovies","warn","Loader","MoviesList"],"sourceRoot":""}