{"version":3,"file":"static/js/354.d0394758.chunk.js","mappings":"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","sources":["Services/api.js","components/Reusable Components/Loader/Loader.jsx","Services/timeFormater.js","components/Crew/Crew.styled.js","components/Crew/Crew.jsx","components/Trailer/Trailer.styled.js","components/Trailer/Trailer.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86633d198b2023a18dd77350f0e9072';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchUpcomingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/movie/upcoming/?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchTopRatedMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/movie/top_rated/?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviebyId(movieId) {\n  const trendingMovies = await fetchTrendingMovies();\n  return trendingMovies.find(movie => movie.id === movieId);\n}\n\nexport async function fetchConfig() {\n  const response = await axios.get(\n    `${BASE_URL}configuration?api_key=${API_KEY}`\n  );\n  return response.data.images;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      append_to_response: 'credits,reviews,videos',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n}\n","import { FidgetSpinner } from 'react-loader-spinner';\nimport { Box } from 'components/Reusable Components/Box';\nimport { Text } from 'components/Reviews/Reviews.styled';\n\nconst Loader = () => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Text>Loading . . .</Text>\n      <FidgetSpinner backgroundColor=\"green\" />\n    </Box>\n  );\n};\n\nexport default Loader;\n","export function toHoursAndMinutes(totalMinutes) {\n  const minutes = totalMinutes % 60;\n  const hours = Math.floor(totalMinutes / 60);\n\n  return `${padTo2Digits(hours)}:${padTo2Digits(minutes)}`;\n}\n\nfunction padTo2Digits(num) {\n  return num.toString().padStart(2, '0');\n}\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  gap: ${p => p.theme.space[5]}px;\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n`;\n","import { Box } from 'components/Reusable Components/Box';\nimport { Wraper } from './Crew.styled';\n\nfunction Crew({ crew, position, positionName }) {\n  const findDirector = () => {\n    const crewMember = crew.find(\n      crewMember => crewMember.known_for_department === position\n    );\n\n    return crewMember.name;\n  };\n\n  return (\n    <Wraper>\n      <Box as=\"h3\" color=\"white\">\n        {positionName}:\n      </Box>\n      <Box as=\"span\" fontWeight=\"400\" display=\"block\" color=\"#3DD2CC\">\n        {findDirector()}\n      </Box>\n    </Wraper>\n  );\n}\n\nexport default Crew;\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  border-radius: ${p => p.theme.radii.lg};\n  overflow: hidden;\n\n  iframe {\n    width: 100%;\n    height: calc(100vw / 1.77); /* 16:9 */\n    margin: 0;\n  }\n\n  @media screen and (min-width: ${p => p.theme.sizes.pc}) {\n    iframe {\n      width: 100%;\n      height: calc(800px / 1.77);\n    }\n  }\n`;\n","import { Wraper } from 'components/Trailer/Trailer.styled';\n\nfunction Trailer({ videos, title }) {\n  const findTrailer = () => {\n    const trailer = videos.find(video =>\n      video.name.toLowerCase().includes('trailer')\n    );\n\n    return `http://www.youtube.com/embed/${trailer?.key}`;\n  };\n\n  return (\n    <Wraper>\n      <iframe\n        title={title}\n        id=\"ytplayer\"\n        src={findTrailer()}\n        frameBorder=\"0\"\n        allowFullScreen\n        allow=\"autoplay; encrypted-media\"\n      ></iframe>\n    </Wraper>\n  );\n}\n\nexport default Trailer;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchConfig, fetchMovieDetails } from 'Services/api';\nimport { useState, useEffect } from 'react';\nimport { Box } from 'components/Reusable Components/Box';\nimport Loader from 'components/Reusable Components/Loader';\nimport {\n  BackIcon,\n  Text,\n  Geners,\n  Heading,\n  StyledLink,\n  BackLink,\n  ListItem,\n} from './MovieDetails.styled';\nimport { toHoursAndMinutes } from 'Services/timeFormater';\nimport Crew from 'components/Crew';\nimport Trailer from 'components/Trailer';\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  console.log('movieDetails', movieDetails);\n  const [loading, setLoading] = useState(false);\n  const [config, setConfig] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/home/trending';\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(movieId);\n        setMovieDetails(movieDetails);\n        setLoading(false);\n      } catch (error) {\n        console.warn(error);\n        setMovieDetails('error');\n      }\n\n      try {\n        const config = await fetchConfig();\n        setConfig(config);\n      } catch (error) {\n        console.warn(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieDetails || !config) {\n    return null;\n  }\n\n  if (movieDetails === 'error') {\n    return (\n      <Box pl=\"16px\">\n        <BackLink to={backLinkHref}>\n          <BackIcon></BackIcon>\n          Back to Movies\n        </BackLink>\n        <Text>\n          Ooops... The page you are looking for might have been removed or\n          temporarily unavailable\n        </Text>\n      </Box>\n    );\n  }\n\n  const {\n    title,\n    overview,\n    genres,\n    videos,\n    release_date,\n    runtime,\n    imdb_id,\n    credits,\n  } = movieDetails;\n\n  return (\n    <>\n      {loading && <Loader></Loader>}\n      <BackLink to={backLinkHref}>\n        <BackIcon></BackIcon>\n        Back to Movies\n      </BackLink>\n      <Trailer videos={videos.results} title={title}></Trailer>\n      <Text>\n        {`${title} • ${release_date.slice(0, 4)} • ${toHoursAndMinutes(\n          runtime\n        )}`}{' '}\n        •<a href={`https://www.imdb.com/title/${imdb_id}/`}> IMDb</a>\n      </Text>\n      <Geners>\n        {genres.map(genr => (\n          <span key={genr.id}>{genr.name}</span>\n        ))}\n      </Geners>\n      <Heading>Overview</Heading>\n      <Text>{overview}</Text>\n      <Box as=\"ul\" mb=\"16px\">\n        <ListItem>\n          <Crew\n            crew={credits.crew}\n            position=\"Directing\"\n            positionName=\"Director\"\n          ></Crew>\n        </ListItem>\n        <ListItem>\n          <Crew\n            crew={credits.crew}\n            position=\"Writing\"\n            positionName=\"Writer\"\n          ></Crew>\n        </ListItem>\n        <ListItem>\n          <Crew\n            crew={credits.crew}\n            position=\"Sound\"\n            positionName=\"Music by\"\n          ></Crew>\n        </ListItem>\n      </Box>\n      <StyledLink to=\"cast\">Cast</StyledLink>\n      <StyledLink to=\"reviews\">Reviews</StyledLink>\n      <Outlet context={[movieDetails, config]} />\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchUpcomingMovies","fetchTopRatedMovies","fetchConfig","images","fetchMovieDetails","movieId","params","api_key","language","append_to_response","fetchMovieByQuery","query","Box","display","alignItems","justifyContent","backgroundColor","toHoursAndMinutes","totalMinutes","minutes","hours","Math","floor","padTo2Digits","num","toString","padStart","Wraper","styled","p","theme","space","crew","position","positionName","as","color","fontWeight","find","crewMember","known_for_department","name","radii","lg","sizes","pc","videos","title","id","src","trailer","video","toLowerCase","includes","key","findTrailer","frameBorder","allowFullScreen","allow","useState","movieDetails","setMovieDetails","console","log","loading","setLoading","config","setConfig","useParams","backLinkHref","useLocation","state","from","useEffect","fetchData","warn","pl","to","overview","genres","release_date","runtime","imdb_id","credits","Loader","slice","href","map","genr","mb","context"],"sourceRoot":""}