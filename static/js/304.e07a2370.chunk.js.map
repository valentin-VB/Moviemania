{"version":3,"file":"static/js/304.e07a2370.chunk.js","mappings":"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","sources":["Hooks/useMovies.jsx","Services/infiniteScroll.js","components/Reusable Components/BackToTopLink/BackToTopLink..styled.js","components/Reusable Components/BackToTopLink/BackToTopLink.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/MoviesSearch/MoviesSearch.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchConfig } from 'Services/api';\n\nconst useMovies = (page = 1, fetchMovies, searchQuery) => {\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(null);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [config, setConfig] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const result = await fetchMovies(page, searchQuery);\n        const config = await fetchConfig();\n        setConfig(config);\n        if (page === 1) {\n          setResults(result);\n        } else setResults(prev => [...prev, ...result]);\n        setHasNextPage(Boolean(result.length));\n      } catch (error) {\n        console.warn(error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [fetchMovies, page, searchQuery]);\n\n  return {\n    isLoading,\n    results,\n    hasNextPage,\n    error,\n    config,\n  };\n};\n\nexport default useMovies;\n","export function intObserverManager({\n  movieCard,\n  hasNextPage,\n  isLoading,\n  addPage,\n  intObserver,\n}) {\n  if (isLoading) {\n    return;\n  }\n  if (intObserver.current) {\n    intObserver.current.disconnect();\n  }\n\n  if (movieCard) {\n    intObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasNextPage) {\n        addPage();\n      }\n    });\n\n    intObserver.current.observe(movieCard);\n  }\n}\n","import { keyframes } from 'styled-components';\nimport styled from 'styled-components';\n\nconst drag = keyframes`\n  0% {\n    transform: translateY(30%);\n  }\n  50% {\n    transform: translateY(0%);\n  }\n  100% {\n    transform: translateY(30%);\n  }\n`;\n\nexport const Link = styled.a`\n  position: fixed;\n  bottom: ${p => p.theme.space[5]}px;\n  right: ${p => p.theme.space[5]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.accent};\n  animation: ${drag} 2s ease-in-out infinite;\n  :hover {\n    color: ${p => p.theme.colors.accentText};\n  }\n\n  svg {\n    width: 60px;\n    height: auto;\n  }\n`;\n","import { RxDoubleArrowUp } from 'react-icons/rx';\nimport { Link } from './BackToTopLink..styled';\n\nfunction BackToTopLink({ inView }) {\n  return (\n    !inView && (\n      <Link\n        onClick={() =>\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n          })\n        }\n      >\n        <RxDoubleArrowUp></RxDoubleArrowUp>\n      </Link>\n    )\n  );\n}\n\nexport default BackToTopLink;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesCategories = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  transition: color ${p => p.theme.transitions.tDuration}\n      ${p => p.theme.transitions.tTimingFunction},\n    scale ${p => p.theme.transitions.tDuration}\n      ${p => p.theme.transitions.tTimingFunction};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accentText};\n    scale: 1.05;\n  }\n\n  &.active {\n    color: ${p => p.theme.colors.accentText};\n    scale: 1.05;\n  }\n`;\n","import { Box } from 'components/Reusable Components/Box';\nimport { MoviesCategories } from './Home.styled';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport MoviesSearch from 'pages/MoviesSearch/MoviesSearch';\n\nfunction Home() {\n  return (\n    <>\n      <Box display=\"flex\" justifyContent=\"space-around\">\n        <MoviesCategories to=\"trending\">Trending</MoviesCategories>\n        <MoviesCategories to=\"upcoming\">Upcoming</MoviesCategories>\n        <MoviesCategories to=\"top_rated\">Top Rated</MoviesCategories>\n      </Box>\n      <MoviesSearch></MoviesSearch>\n      <Suspense>\n        <Outlet></Outlet>\n      </Suspense>\n    </>\n  );\n}\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: inline-flex;\n  justify-content: center;\n  position: relative;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n  @media screen and (min-width: ${p => p.theme.sizes.pc}) {\n    display: inline;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  background-color: ${p => p.theme.colors.secondary};\n  color: ${p => p.theme.colors.text};\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);\n  border-radius: 30px;\n  width: 100%;\n  max-width: 600px;\n  font: inherit;\n  /* font-size: 30px; */\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: 75px;\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  position: absolute;\n  background-color: ${p => p.theme.colors.text};\n  right: ${p => p.theme.space[4]}px;\n  width: 64px;\n  height: 64px;\n  border: 0;\n  border-radius: 30px;\n  opacity: 0.6;\n  transition: opacity ${p => p.theme.transitions.tDuration}\n    ${p => p.theme.transitions.tTimingFunction};\n  cursor: pointer;\n  outline: none;\n\n  svg {\n    width: 20px;\n    height: auto;\n  }\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { Input, StyledForm, Btn } from './Searchbar.styled';\nimport { TbSearch } from 'react-icons/tb';\nimport { Box } from 'components/Reusable Components/Box';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const { register, handleSubmit, setValue } = useForm();\n  const handleSearchSubmit = data => {\n    if (data.searchQuery.trim() === '') {\n      return;\n    }\n    onSubmit(data.searchQuery);\n  };\n\n  useEffect(() => {\n    setValue('searchQuery', searchQuery);\n  }, [searchQuery, setValue]);\n\n  return (\n    <Box textAlign=\"center\" mt=\"32px\" pl=\"32px\" pr=\"32px\">\n      <StyledForm\n        onSubmit={handleSubmit(data => {\n          handleSearchSubmit(data);\n        })}\n      >\n        <Input\n          {...register('searchQuery')}\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search for movies\"\n        ></Input>\n        <Btn>\n          <TbSearch></TbSearch>\n        </Btn>\n      </StyledForm>\n    </Box>\n  );\n};\n\nexport default Searchbar;\n","import { useSearchParams, useNavigate } from 'react-router-dom';\nimport { useState, useRef, useCallback } from 'react';\nimport Searchbar from 'components/Searchbar';\nimport { fetchMovieByQuery } from 'Services/api';\nimport Loader from 'components/Reusable Components/Loader';\nimport useMovies from 'Hooks/useMovies';\nimport { List } from 'components/MovieCard/MovieCard.styled';\nimport { Box } from 'components/Reusable Components/Box';\nimport { useInView } from 'react-intersection-observer';\nimport BackToTopLink from 'components/Reusable Components/BackToTopLink';\nimport { intObserverManager } from 'Services/infiniteScroll';\nimport ListContent from 'components/ListContent';\n\nfunction MoviesSearch() {\n  const [searchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const navigate = useNavigate();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const { isLoading, results, hasNextPage, error, config } = useMovies(\n    page,\n    fetchMovieByQuery,\n    searchQuery\n  );\n\n  const handleFormSubmit = query => {\n    navigate({\n      pathname: '/movies',\n      search: `?query=${query}`,\n    });\n    setPage(1);\n  };\n\n  const addPage = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const intObserver = useRef();\n  const lastMovieRef = useCallback(\n    movieCard => {\n      const params = {\n        movieCard,\n        hasNextPage,\n        isLoading,\n        addPage,\n        intObserver,\n      };\n\n      intObserverManager(params);\n    },\n    [isLoading, hasNextPage]\n  );\n\n  const { ref, inView } = useInView({\n    rootMargin: '200px',\n    threshold: 0,\n  });\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n      {error && (\n        <Box p=\"16px\" color=\"white\">\n          Whoops, something went wrong: {error.message}\n        </Box>\n      )}\n      {isLoading && <Loader></Loader>}\n      {results.length > 0 && (\n        <>\n          <List>\n            <ListContent\n              results={results}\n              config={config}\n              lastMovieRef={lastMovieRef}\n              elRef={ref}\n            />\n          </List>\n          <BackToTopLink inView={inView}></BackToTopLink>\n        </>\n      )}\n      {results.length === 0 &&\n        searchQuery &&\n        isLoading !== null &&\n        isLoading !== true && (\n          <Box p=\"16px\" color=\"white\">\n            Sorry, no movie found for this search query :(\n          </Box>\n        )}\n    </>\n  );\n}\n\nexport default MoviesSearch;\n"],"names":["page","fetchMovies","searchQuery","useState","results","setResults","isLoading","setIsLoading","hasNextPage","setHasNextPage","config","setConfig","error","setError","useEffect","fetchData","result","fetchConfig","prev","Boolean","length","console","warn","intObserverManager","movieCard","addPage","intObserver","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","drag","keyframes","Link","styled","p","theme","space","colors","accent","accentText","inView","onClick","window","scrollTo","top","behavior","MoviesCategories","NavLink","text","transitions","tDuration","tTimingFunction","Box","display","justifyContent","to","MoviesSearch","Suspense","StyledForm","sizes","pc","Input","secondary","Btn","onSubmit","useSearchParams","get","useForm","register","handleSubmit","setValue","textAlign","mt","pl","pr","data","trim","handleSearchSubmit","type","autoComplete","placeholder","searchParams","setPage","navigate","useNavigate","useMovies","fetchMovieByQuery","useRef","lastMovieRef","useCallback","params","useInView","rootMargin","threshold","ref","query","pathname","search","color","message","Loader","ListContent","elRef","BackToTopLink"],"sourceRoot":""}