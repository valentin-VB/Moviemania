{"version":3,"file":"static/js/820.8c31b08f.chunk.js","mappings":"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","sources":["components/CrewMember/CrewMember.styled.js","components/CrewMember/CrewMember.jsx","components/Crew/Crew.jsx","components/Trailer/Trailer.styled.js","components/Trailer/Trailer.jsx","Services/timeFormater.js","components/MovieInfo/MovieInfo,styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  gap: ${p => p.theme.space[5]}px;\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n`;\n","import { Box } from 'components/Reusable Components/Box';\nimport { Wraper } from './CrewMember.styled';\n\nfunction CrewMember({ crew, position, positionName }) {\n  const findCrewMember = () => {\n    const crewMember = crew.find(\n      crewMember => crewMember.known_for_department === position\n    );\n\n    if (!crewMember?.name) {\n      return 'Unknown author';\n    }\n\n    return crewMember?.name;\n  };\n\n  return (\n    <Wraper>\n      <Box as=\"h3\" color=\"white\">\n        {positionName}:\n      </Box>\n      <Box as=\"span\" fontWeight=\"400\" display=\"block\" color=\"#3DD2CC\">\n        {findCrewMember()}\n      </Box>\n    </Wraper>\n  );\n}\n\nexport default CrewMember;\n","import CrewMember from 'components/CrewMember';\nimport { Box } from 'components/Reusable Components/Box';\nimport { ListItem } from 'pages/MovieDetails/MovieDetails.styled';\n\nfunction Crew({ credits }) {\n  return (\n    <Box as=\"ul\" mb=\"16px\">\n      <ListItem>\n        <CrewMember\n          crew={credits.crew}\n          position=\"Directing\"\n          positionName=\"Director\"\n        ></CrewMember>\n      </ListItem>\n      <ListItem>\n        <CrewMember\n          crew={credits.crew}\n          position=\"Writing\"\n          positionName=\"Writer\"\n        ></CrewMember>\n      </ListItem>\n      <ListItem>\n        <CrewMember\n          crew={credits.crew}\n          position=\"Sound\"\n          positionName=\"Music by\"\n        ></CrewMember>\n      </ListItem>\n    </Box>\n  );\n}\n\nexport default Crew;\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  border-radius: ${p => p.theme.radii.lg};\n  overflow: hidden;\n\n  iframe {\n    width: 100%;\n    height: calc(100vw / 1.77); /* 16:9 */\n    margin: 0;\n  }\n\n  @media screen and (min-width: ${p => p.theme.sizes.pc}) {\n    iframe {\n      width: 100%;\n      height: calc(800px / 1.77);\n    }\n  }\n`;\n","import { Wraper } from 'components/Trailer/Trailer.styled';\n\nfunction Trailer({ videos, title }) {\n  const findTrailer = () => {\n    const trailer = videos.find(video =>\n      video.name.toLowerCase().includes('trailer')\n    );\n\n    return `http://www.youtube.com/embed/${trailer?.key}`;\n  };\n\n  return (\n    <Wraper>\n      <iframe\n        title={title}\n        id=\"ytplayer\"\n        src={findTrailer()}\n        frameBorder=\"0\"\n        allowFullScreen\n        allow=\"autoplay; encrypted-media\"\n      ></iframe>\n    </Wraper>\n  );\n}\n\nexport default Trailer;\n","export function toHoursAndMinutes(totalMinutes) {\n  const minutes = totalMinutes % 60;\n  const hours = Math.floor(totalMinutes / 60);\n\n  return `${padTo2Digits(hours)}:${padTo2Digits(minutes)}`;\n}\n\nfunction padTo2Digits(num) {\n  return num.toString().padStart(2, '0');\n}\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  color: ${p => p.theme.colors.white};\n  font-weight: ${p => p.theme.fontWeights.normal};\n`;\n\nexport const IMDbLink = styled.a`\n  display: flex;\n  color: ${p => p.theme.colors.accentText};\n`;\n","import { Box } from 'components/Reusable Components/Box';\nimport { toHoursAndMinutes } from 'Services/timeFormater';\nimport { IMDbLink, Text } from './MovieInfo,styled';\n\nfunction MovieInfo({ release_date, runtime, imdb_id }) {\n  return (\n    <Box\n      display=\"inline-grid\"\n      gridGap=\"6px\"\n      gridTemplateColumns=\"auto auto auto auto\"\n      alignItems=\"center\"\n    >\n      <Text>\n        {release_date.slice(0, 4)} <span>&nbsp;•</span>\n      </Text>\n      <Text>\n        {toHoursAndMinutes(runtime)} <span>&nbsp;•</span>\n      </Text>\n      <IMDbLink href={`https://www.imdb.com/title/${imdb_id}/`}>IMDb</IMDbLink>\n    </Box>\n  );\n}\n\nexport default MovieInfo;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchConfig, fetchMovieDetails } from 'Services/api';\nimport { useState, useEffect } from 'react';\nimport { Box } from 'components/Reusable Components/Box';\nimport Loader from 'components/Reusable Components/Loader';\nimport {\n  Text,\n  Geners,\n  Heading,\n  StyledLink,\n  BackLink,\n  Button,\n} from './MovieDetails.styled';\nimport Crew from 'components/Crew';\nimport Trailer from 'components/Trailer';\nimport { MdArrowBackIosNew } from 'react-icons/md';\nimport { BsBookmarkFill } from 'react-icons/bs';\nimport { LocalStorageManager } from 'Services/localStorage';\nimport MovieInfo from 'components/MovieInfo';\n\nconst localStorageManager = new LocalStorageManager();\n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [config, setConfig] = useState(null);\n  const [isActive, setIsActive] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/home/trending';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const movieDetails = await fetchMovieDetails(movieId);\n        setMovieDetails(movieDetails);\n        setIsActive(localStorageManager.isAddedToWatchList(movieDetails.id));\n      } catch (error) {\n        console.warn(error);\n        setMovieDetails('error');\n      }\n\n      try {\n        const config = await fetchConfig();\n        setConfig(config);\n      } catch (error) {\n        console.warn(error);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieDetails || !config) {\n    return null;\n  }\n\n  if (movieDetails === 'error') {\n    return (\n      <Box pl=\"16px\">\n        <BackLink to={backLinkHref}>\n          <MdArrowBackIosNew></MdArrowBackIosNew>\n          Back to Movies\n        </BackLink>\n        <Text>\n          Ooops... The page you are looking for might have been removed or\n          temporarily unavailable\n        </Text>\n      </Box>\n    );\n  }\n\n  const {\n    title,\n    overview,\n    genres,\n    videos,\n    release_date,\n    runtime,\n    imdb_id,\n    credits,\n    id,\n  } = movieDetails;\n\n  return (\n    <>\n      {isLoading && <Loader></Loader>}\n      <BackLink to={backLinkHref}>\n        <MdArrowBackIosNew></MdArrowBackIosNew>\n        Back to Movies\n      </BackLink>\n      <Heading>{title}</Heading>\n      <Trailer videos={videos.results} title={title}></Trailer>\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alingItems=\"center\"\n        mb=\"16px\"\n      >\n        <MovieInfo\n          release_date={release_date}\n          runtime={runtime}\n          imdb_id={imdb_id}\n        ></MovieInfo>\n\n        <Button\n          className={isActive ? 'active' : null}\n          onClick={() => {\n            const isActive = localStorageManager.toogleMovies(id);\n            setIsActive(isActive);\n          }}\n        >\n          {isActive ? 'Remove from WatchList' : 'Add to Watchlist'}\n          <BsBookmarkFill />\n        </Button>\n      </Box>\n      <Geners>\n        {genres.map(genr => (\n          <span key={genr.id}>{genr.name}</span>\n        ))}\n      </Geners>\n      <Heading>Overview</Heading>\n      <Text>{overview}</Text>\n      <Crew credits={credits}></Crew>\n      <StyledLink to=\"cast\">Cast</StyledLink>\n      <StyledLink to=\"reviews\">Reviews</StyledLink>\n      <Outlet context={[movieDetails, config]} />\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["Wraper","styled","p","theme","space","crew","position","positionName","Box","as","color","fontWeight","display","crewMember","find","known_for_department","name","findCrewMember","credits","mb","radii","lg","sizes","pc","videos","title","id","src","trailer","video","toLowerCase","includes","key","findTrailer","frameBorder","allowFullScreen","allow","toHoursAndMinutes","totalMinutes","minutes","hours","Math","floor","padTo2Digits","num","toString","padStart","Text","colors","white","fontWeights","normal","IMDbLink","accentText","release_date","runtime","imdb_id","gridGap","gridTemplateColumns","alignItems","slice","href","localStorageManager","LocalStorageManager","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","config","setConfig","isActive","setIsActive","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchData","fetchMovieDetails","isAddedToWatchList","console","warn","fetchConfig","pl","to","overview","genres","Loader","results","justifyContent","alingItems","className","onClick","toogleMovies","map","genr","context"],"sourceRoot":""}