{"version":3,"file":"static/js/796.4eeb3ce8.chunk.js","mappings":"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","sources":["Hooks/useMovies.jsx","Services/infiniteScroll.js","components/Reusable Components/BackToTopLink/BackToTopLink..styled.js","components/Reusable Components/BackToTopLink/BackToTopLink.jsx","components/UpcomingMovies/UpcomingMovies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchConfig } from 'Services/api';\n\nconst useMovies = (page = 1, fetchMovies, searchQuery) => {\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(null);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [config, setConfig] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const result = await fetchMovies(page, searchQuery);\n        const config = await fetchConfig();\n        setConfig(config);\n        if (page === 1) {\n          setResults(result);\n        } else setResults(prev => [...prev, ...result]);\n        setHasNextPage(Boolean(result.length));\n      } catch (error) {\n        console.warn(error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [fetchMovies, page, searchQuery]);\n\n  return {\n    isLoading,\n    results,\n    hasNextPage,\n    error,\n    config,\n  };\n};\n\nexport default useMovies;\n","export function intObserverManager({\n  movieCard,\n  hasNextPage,\n  isLoading,\n  addPage,\n  intObserver,\n}) {\n  if (isLoading) {\n    return;\n  }\n  if (intObserver.current) {\n    intObserver.current.disconnect();\n  }\n\n  if (movieCard) {\n    intObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasNextPage) {\n        addPage();\n      }\n    });\n\n    intObserver.current.observe(movieCard);\n  }\n}\n","import { keyframes } from 'styled-components';\nimport styled from 'styled-components';\n\nconst drag = keyframes`\n  0% {\n    transform: translateY(30%);\n  }\n  50% {\n    transform: translateY(0%);\n  }\n  100% {\n    transform: translateY(30%);\n  }\n`;\n\nexport const Link = styled.a`\n  position: fixed;\n  bottom: ${p => p.theme.space[5]}px;\n  right: ${p => p.theme.space[5]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.accent};\n  animation: ${drag} 2s ease-in-out infinite;\n  :hover {\n    color: ${p => p.theme.colors.accentText};\n  }\n\n  svg {\n    width: 60px;\n    height: auto;\n  }\n`;\n","import { RxDoubleArrowUp } from 'react-icons/rx';\nimport { Link } from './BackToTopLink..styled';\n\nfunction BackToTopLink({ inView }) {\n  return (\n    !inView && (\n      <Link href=\"#top\">\n        <RxDoubleArrowUp></RxDoubleArrowUp>\n      </Link>\n    )\n  );\n}\n\nexport default BackToTopLink;\n","import useMovies from 'Hooks/useMovies';\nimport { useState, useRef, useCallback } from 'react';\nimport Loader from 'components/Reusable Components/Loader';\nimport { fetchUpcomingMovies } from 'Services/api';\nimport { List } from 'components/MovieCard/MovieCard.styled';\nimport BackToTopLink from 'components/Reusable Components/BackToTopLink';\nimport { Box } from 'components/Reusable Components/Box';\nimport ListContent from 'components/ListContent';\nimport { useInView } from 'react-intersection-observer';\nimport { intObserverManager } from 'Services/infiniteScroll';\n\nconst UpcomingMovies = () => {\n  const [page, setPage] = useState(1);\n  const { isLoading, results, hasNextPage, error, config } = useMovies(\n    page,\n    fetchUpcomingMovies\n  );\n\n  const { ref, inView } = useInView({\n    rootMargin: '200px',\n    threshold: 0,\n  });\n\n  const intObserver = useRef();\n  const addPage = () => {\n    setPage(prev => prev + 1);\n  };\n  const lastMovieRef = useCallback(\n    movieCard => {\n      const params = {\n        movieCard,\n        hasNextPage,\n        isLoading,\n        addPage,\n        intObserver,\n      };\n      intObserverManager(params);\n    },\n    [isLoading, hasNextPage]\n  );\n\n  return (\n    <>\n      {error && (\n        <Box p=\"16px\" color=\"white\">\n          Whoops, something went wrong: {error.message}\n        </Box>\n      )}\n      {results.length > 0 && (\n        <>\n          <List>\n            <ListContent\n              results={results}\n              config={config}\n              lastMovieRef={lastMovieRef}\n              elRef={ref}\n            />\n          </List>\n          <BackToTopLink inView={inView}></BackToTopLink>\n        </>\n      )}\n\n      {isLoading && <Loader></Loader>}\n    </>\n  );\n};\n\nexport default UpcomingMovies;\n"],"names":["page","fetchMovies","searchQuery","useState","results","setResults","isLoading","setIsLoading","hasNextPage","setHasNextPage","config","setConfig","error","setError","useEffect","fetchData","result","fetchConfig","prev","Boolean","length","console","warn","intObserverManager","movieCard","addPage","intObserver","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","drag","keyframes","Link","styled","p","theme","space","colors","accent","accentText","inView","href","setPage","useMovies","fetchUpcomingMovies","useInView","rootMargin","threshold","ref","useRef","lastMovieRef","useCallback","params","Box","color","message","ListContent","elRef","BackToTopLink","Loader"],"sourceRoot":""}