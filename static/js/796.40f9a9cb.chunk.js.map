{"version":3,"file":"static/js/796.40f9a9cb.chunk.js","mappings":"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","sources":["Hooks/useMovies.jsx","Services/infiniteScroll.js","components/Reusable Components/BackToTopLink/BackToTopLink..styled.js","components/Reusable Components/BackToTopLink/BackToTopLink.jsx","components/UpcomingMovies/UpcomingMovies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchConfig } from 'Services/api';\n\nconst useMovies = (page = 1, fetchMovies, searchQuery) => {\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [config, setConfig] = useState(null);\n  const [error, setError] = useState(null);\n  const [isFetched, setIsFetched] = useState(false);\n\n  const handleSearchbarSubmit = () => {\n    setResults([]);\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const result = await fetchMovies(page, searchQuery);\n        const config = await fetchConfig();\n        setConfig(config);\n        setResults(prev => [...prev, ...result]);\n        setHasNextPage(Boolean(result.length));\n        setIsLoading(false);\n        setIsFetched(true);\n      } catch (error) {\n        console.warn(error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n        // setIsFetched(false);\n      }\n    };\n\n    fetchData();\n  }, [fetchMovies, page, searchQuery]);\n\n  return {\n    isLoading,\n    results,\n    hasNextPage,\n    error,\n    config,\n    isFetched,\n    handleSearchbarSubmit,\n  };\n};\n\nexport default useMovies;\n","export function intObserverManager({\n  movieCard,\n  hasNextPage,\n  isLoading,\n  addPage,\n  intObserver,\n}) {\n  if (isLoading) {\n    return;\n  }\n  if (intObserver.current) {\n    intObserver.current.disconnect();\n  }\n\n  if (movieCard) {\n    intObserver.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasNextPage) {\n        addPage();\n      }\n    });\n\n    intObserver.current.observe(movieCard);\n  }\n}\n","import { keyframes } from 'styled-components';\nimport styled from 'styled-components';\n\nconst drag = keyframes`\n  0% {\n    transform: translateY(30%);\n  }\n  50% {\n    transform: translateY(0%);\n  }\n  100% {\n    transform: translateY(30%);\n  }\n`;\n\nexport const Link = styled.a`\n  position: fixed;\n  bottom: ${p => p.theme.space[5]}px;\n  right: ${p => p.theme.space[5]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.accent};\n  animation: ${drag} 2s ease-in-out infinite;\n  :hover {\n    color: ${p => p.theme.colors.accentText};\n  }\n\n  svg {\n    width: 60px;\n    height: auto;\n  }\n`;\n","import React, { useState } from 'react';\nimport { RxDoubleArrowUp } from 'react-icons/rx';\nimport { Link } from './BackToTopLink..styled';\n\nfunction BackToTopLink({ firstElRef }) {\n  const [isIntersect, setIsIntersect] = useState(false);\n\n  let option = {\n    root: null,\n    threshold: [0],\n  };\n\n  const backToTopIntObserver = new IntersectionObserver(entries => {\n    entries[0].isIntersecting ? setIsIntersect(false) : setIsIntersect(true);\n  }, option);\n\n  if (firstElRef.current) {\n    backToTopIntObserver.observe(firstElRef.current);\n  }\n\n  return (\n    isIntersect && (\n      <Link href=\"#top\">\n        <RxDoubleArrowUp></RxDoubleArrowUp>\n      </Link>\n    )\n  );\n}\n\nexport default BackToTopLink;\n","import useMovies from 'Hooks/useMovies';\nimport MovieCard from 'components/MovieCard';\nimport { useState, useRef, useCallback } from 'react';\nimport Loader from 'components/Reusable Components/Loader';\nimport { fetchUpcomingMovies } from 'Services/api';\nimport { List } from 'components/MovieCard/MovieCard.styled';\nimport BackToTopLink from 'components/Reusable Components/BackToTopLink';\nimport { Box } from 'components/Reusable Components/Box';\nimport { intObserverManager } from 'Services/infiniteScroll';\n\nconst UpcomingMovies = () => {\n  const [page, setPage] = useState(1);\n  const { isLoading, results, hasNextPage, error, config } = useMovies(\n    page,\n    fetchUpcomingMovies\n  );\n\n  const addPage = () => {\n    setPage(prev => prev + 1);\n  };\n  const intObserver = useRef();\n  const firstElRef = useRef();\n\n  const lastMovieRef = useCallback(\n    movieCard => {\n      const params = {\n        movieCard,\n        hasNextPage,\n        isLoading,\n        addPage,\n        intObserver,\n      };\n      intObserverManager(params);\n    },\n    [isLoading, hasNextPage]\n  );\n\n  const content = results.map((movie, i) => {\n    if (results.length === i + 1) {\n      return (\n        <MovieCard\n          ref={lastMovieRef}\n          key={movie.id}\n          movie={movie}\n          config={config}\n        ></MovieCard>\n      );\n    }\n\n    if (i === 1) {\n      return (\n        <MovieCard\n          ref={firstElRef}\n          key={movie.id}\n          movie={movie}\n          config={config}\n        ></MovieCard>\n      );\n    }\n    return <MovieCard key={movie.id} movie={movie} config={config}></MovieCard>;\n  });\n\n  return (\n    <>\n      {error && (\n        <Box p=\"16px\" color=\"white\">\n          Whoops, something went wrong: {error.message}\n        </Box>\n      )}\n      {results.length > 0 && (\n        <>\n          <List>{content}</List>\n          <BackToTopLink firstElRef={firstElRef}></BackToTopLink>\n        </>\n      )}\n\n      {isLoading && <Loader></Loader>}\n    </>\n  );\n};\n\nexport default UpcomingMovies;\n"],"names":["page","fetchMovies","searchQuery","useState","results","setResults","isLoading","setIsLoading","hasNextPage","setHasNextPage","config","setConfig","error","setError","isFetched","setIsFetched","handleSearchbarSubmit","useEffect","fetchData","result","fetchConfig","prev","Boolean","length","console","warn","intObserverManager","movieCard","addPage","intObserver","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","drag","keyframes","Link","styled","p","theme","space","colors","accent","accentText","firstElRef","isIntersect","setIsIntersect","backToTopIntObserver","root","threshold","href","setPage","useMovies","fetchUpcomingMovies","useRef","lastMovieRef","useCallback","params","content","map","movie","i","MovieCard","ref","id","Box","color","message","BackToTopLink","Loader"],"sourceRoot":""}