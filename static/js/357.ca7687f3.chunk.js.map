{"version":3,"file":"static/js/357.ca7687f3.chunk.js","mappings":"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","sources":["Services/api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Reusable Components/Loader/Loader.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/FoundMovies/FoundMovies.jsx","pages/MoviesSearch/MoviesSearch.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86633d198b2023a18dd77350f0e9072';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/week?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchUpcomingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/movie/upcoming/?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchTopRatedMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/movie/top_rated/?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviebyId(movieId) {\n  const trendingMovies = await fetchTrendingMovies();\n  return trendingMovies.find(movie => movie.id === movieId);\n}\n\nexport async function fetchConfig() {\n  const response = await axios.get(\n    `${BASE_URL}configuration?api_key=${API_KEY}`\n  );\n  return response.data.images;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const response = await axios.get(`${BASE_URL}movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      append_to_response: 'credits,reviews,videos',\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[5]}px;\n\n  @media screen and (min-width: ${p => p.theme.sizes.pc}) {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: ${p => p.theme.space[5]}px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  @media screen and (max-width: ${p => p.theme.sizes.phone}) {\n    :not(:last-child) {\n      margin-bottom: ${p => p.theme.space[5]}px;\n    }\n  }\n`;\n\nexport const Wraper = styled.div`\n  position: relative;\n  border-radius: 20px 20px 20px 20px;\n  border: 1px solid ${p => p.theme.colors.text};\n  overflow: hidden;\n  height: max-content;\n  width: max-content;\n  margin-left: auto;\n  margin-right: auto;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1), scale 250ms;\n  :hover,\n  :focus {\n    box-shadow: 0px 2px 2px rgba(255, 255, 255, 0.12),\n      0px 5px 5px rgba(255, 255, 255, 0.06),\n      2px 5px 7px rgba(255, 255, 255, 0.16);\n    scale: 103%;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  color: rgba(240, 240, 240, 0.9);\n  background-color: rgba(240, 240, 240, 0.6); ;\n`;\n","import { Box } from 'components/Reusable Components/Box';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Wraper, ListItem, MovieInfo, List } from './MoviesList.styled';\n\nfunction MoviesList({ movies, config }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.length > 0 &&\n        movies.map(movie => (\n          <ListItem key={movie.id}>\n            <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <Wraper>\n                <img\n                  alt={movie.title}\n                  src={`${config.base_url}${config.poster_sizes[3]}${movie.poster_path}`}\n                />\n                <MovieInfo>\n                  <Box as=\"p\" pl=\"10px\" pr=\"10px\">\n                    {movie.title}\n                  </Box>\n                </MovieInfo>\n              </Wraper>\n            </NavLink>\n          </ListItem>\n        ))}\n    </List>\n  );\n}\n\nexport default MoviesList;\n","import { FidgetSpinner } from 'react-loader-spinner';\nimport { Box } from 'components/Reusable Components/Box';\nimport { Text } from 'components/Reviews/Reviews.styled';\n\nconst Loader = () => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Text>Loading . . .</Text>\n      <FidgetSpinner backgroundColor=\"green\" />\n    </Box>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: inline-flex;\n  justify-content: center;\n  position: relative;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n  @media screen and (min-width: ${p => p.theme.sizes.pc}) {\n    display: inline;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  background-color: ${p => p.theme.colors.secondary};\n  color: ${p => p.theme.colors.text};\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);\n  border-radius: 30px;\n  width: 100%;\n  max-width: 600px;\n  font: inherit;\n  /* font-size: 30px; */\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  position: absolute;\n  background-color: ${p => p.theme.colors.text};\n  right: ${p => p.theme.space[4]}px;\n  width: 64px;\n  height: 64px;\n  border: 0;\n  border-radius: 30px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  svg {\n    width: 20px;\n    height: auto;\n  }\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { Input, StyledForm, Btn } from './Searchbar.styled';\nimport { TbSearch } from 'react-icons/tb';\nimport { Box } from 'components/Reusable Components/Box';\n\nconst Searchbar = ({ onSubmit }) => {\n  const { register, handleSubmit, reset } = useForm();\n\n  const handleSearchSubmit = data => {\n    if (data.searchQuery.trim() === '') {\n      return;\n    }\n\n    onSubmit(data.searchQuery);\n    reset();\n    return;\n  };\n\n  return (\n    <Box textAlign=\"center\" mt=\"32px\">\n      <StyledForm\n        onSubmit={handleSubmit(data => {\n          handleSearchSubmit(data);\n        })}\n      >\n        <Input\n          {...register('searchQuery')}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search for movies\"\n        ></Input>\n        <Btn>\n          <TbSearch></TbSearch>\n        </Btn>\n      </StyledForm>\n    </Box>\n  );\n};\n\nexport default Searchbar;\n","import MoviesList from 'components/MoviesList';\nimport { Box } from 'components/Reusable Components/Box';\n\nfunction FoundMovies({ movies, query, config }) {\n  if (movies.length === 0 && query !== '') {\n    return (\n      <Box p=\"16px\" color=\"white\">\n        Sorry, no movie found for this search query :(\n      </Box>\n    );\n  }\n  return <MoviesList movies={movies} config={config}></MoviesList>;\n}\n\nexport default FoundMovies;\n","import Searchbar from 'components/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieByQuery, fetchConfig } from 'Services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Reusable Components/Loader';\nimport FoundMovies from 'components/FoundMovies/FoundMovies';\n\nfunction MoviesSearch() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [config, setConfig] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log('searchParams', searchParams);\n  const searchQuery = searchParams.get('query') ?? '';\n  console.log('searchQuery', searchQuery);\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const result = await fetchMovieByQuery(searchQuery);\n        const config = await fetchConfig();\n        setConfig(config);\n        setMovies(result);\n        setLoading(false);\n      } catch (error) {\n        console.warn(error);\n      }\n    };\n\n    fetchData();\n  }, [searchQuery]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query: query });\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n      {loading ? (\n        <Loader></Loader>\n      ) : (\n        searchQuery !== '' && (\n          <FoundMovies\n            query={searchQuery}\n            movies={movies}\n            config={config}\n          ></FoundMovies>\n        )\n      )}\n    </>\n  );\n}\n\nexport default MoviesSearch;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchUpcomingMovies","fetchTopRatedMovies","fetchConfig","images","fetchMovieDetails","movieId","params","api_key","language","append_to_response","fetchMovieByQuery","query","List","styled","p","theme","space","sizes","pc","ListItem","phone","Wraper","colors","text","MovieInfo","movies","config","location","useLocation","length","map","movie","to","id","state","from","alt","title","src","base_url","poster_sizes","poster_path","Box","as","pl","pr","display","alignItems","justifyContent","backgroundColor","StyledForm","Input","secondary","Btn","onSubmit","useForm","register","handleSubmit","reset","textAlign","mt","searchQuery","trim","handleSearchSubmit","type","autoComplete","autoFocus","placeholder","color","MoviesList","useState","setMovies","loading","setLoading","setConfig","useSearchParams","searchParams","setSearchParams","console","log","get","useEffect","fetchData","result","warn","Loader"],"sourceRoot":""}