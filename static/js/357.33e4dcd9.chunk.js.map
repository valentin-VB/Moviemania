{"version":3,"file":"static/js/357.33e4dcd9.chunk.js","mappings":"gQAEaA,EAAaC,EAAAA,GAAAA,KAAH,sMAIJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGRC,EAAQJ,EAAAA,GAAAA,MAAH,iaAEI,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,SAAnB,IACZ,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,IAAnB,IASM,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAORK,EAAMR,EAAAA,GAAAA,OAAH,0WAGM,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,IAAnB,IACZ,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,mBCDZ,EAhCkB,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,SACnB,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAWhC,OACE,UAACd,EAAD,CACEU,SAAUG,GAAa,SAAAE,IAXA,SAAAA,GACO,KAA5BA,EAAKC,YAAYC,SAIrBP,EAASK,EAAKC,aACdF,IACD,CAKKI,CAAmBH,EACpB,IAHH,WAKE,SAACV,GAAD,kBACMO,EAAS,gBADf,IAEEO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,wBAEd,SAACb,EAAD,WACE,SAAC,MAAD,QAIP,E,kDCzBD,MAPA,YAAiD,IAA1Bc,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACpC,OAAsB,IAAlBF,EAAOG,QAA0B,KAAVF,GAClB,wEAEF,SAACG,EAAA,EAAD,CAAYJ,OAAQA,EAAQE,OAAQA,GAC5C,ECmDD,MAnDA,WAAyB,IAAD,EACtB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA4BH,EAAAA,EAAAA,UAAS,MAArC,eAAOH,EAAP,KAAeO,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnB,EAAW,UAAGkB,EAAaE,IAAI,gBAApB,QAAgC,GA4BjD,OA1BAC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBrB,EAAJ,CAIAe,GAAW,GACX,IAAMO,EAAS,mCAAG,gHAEOC,EAAAA,EAAAA,IAAkBvB,GAFzB,cAERwB,EAFQ,iBAGOC,EAAAA,EAAAA,MAHP,OAGRhB,EAHQ,OAIdO,EAAUP,GACVI,EAAUW,GACVT,GAAW,GANG,kDAQdW,QAAQC,KAAR,MARc,0DAAH,qDAYfL,GAfC,CAgBF,GAAE,CAACtB,KAQF,iCACE,SAAC,EAAD,CAAWN,SAPU,SAAAc,GACvBW,EAAgB,CAAEX,MAAOA,IACzBK,EAAU,GACX,IAKIC,GACC,SAACc,EAAA,EAAD,IAEgB,KAAhB5B,IACE,SAAC,EAAD,CACEQ,MAAOR,EACPO,OAAQA,EACRE,OAAQA,MAMnB,C","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/FoundMovies/FoundMovies.jsx","pages/MoviesSearch/MoviesSearch.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: inline-flex;\n  justify-content: center;\n  position: relative;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-top: ${p => p.theme.space[5]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  background-color: ${p => p.theme.colors.secondary};\n  color: ${p => p.theme.colors.text};\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);\n  border-radius: 30px;\n  width: 100%;\n  max-width: 600px;\n  font: inherit;\n  /* font-size: 30px; */\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  position: absolute;\n  background-color: ${p => p.theme.colors.text};\n  right: ${p => p.theme.space[4]}px;\n  width: 64px;\n  height: 64px;\n  border: 0;\n  border-radius: 30px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  vertical-align: middle;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { Input, StyledForm, Btn } from './Searchbar.styled';\nimport { TbSearch } from 'react-icons/tb';\n\nconst Searchbar = ({ onSubmit }) => {\n  const { register, handleSubmit, reset } = useForm();\n\n  const handleSearchSubmit = data => {\n    if (data.searchQuery.trim() === '') {\n      return;\n    }\n\n    onSubmit(data.searchQuery);\n    reset();\n  };\n\n  return (\n    <StyledForm\n      onSubmit={handleSubmit(data => {\n        handleSearchSubmit(data);\n      })}\n    >\n      <Input\n        {...register('searchQuery')}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search for movies\"\n      ></Input>\n      <Btn>\n        <TbSearch></TbSearch>\n      </Btn>\n    </StyledForm>\n  );\n};\n\nexport default Searchbar;\n","import MoviesList from 'components/MoviesList';\n\nfunction FoundMovies({ movies, query, config }) {\n  if (movies.length === 0 && query !== '') {\n    return <p>Sorry, no movie found for this search query</p>;\n  }\n  return <MoviesList movies={movies} config={config}></MoviesList>;\n}\n\nexport default FoundMovies;\n","import Searchbar from 'components/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieByQuery, fetchConfig } from 'Services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Reusable Components/Loader';\nimport FoundMovies from 'components/FoundMovies/FoundMovies';\n\nfunction MoviesSearch() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [config, setConfig] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const result = await fetchMovieByQuery(searchQuery);\n        const config = await fetchConfig();\n        setConfig(config);\n        setMovies(result);\n        setLoading(false);\n      } catch (error) {\n        console.warn(error);\n      }\n    };\n\n    fetchData();\n  }, [searchQuery]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query: query });\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit}></Searchbar>\n      {loading ? (\n        <Loader></Loader>\n      ) : (\n        searchQuery !== '' && (\n          <FoundMovies\n            query={searchQuery}\n            movies={movies}\n            config={config}\n          ></FoundMovies>\n        )\n      )}\n    </>\n  );\n}\n\nexport default MoviesSearch;\n"],"names":["StyledForm","styled","p","theme","space","Input","colors","secondary","text","Btn","onSubmit","useForm","register","handleSubmit","reset","data","searchQuery","trim","handleSearchSubmit","type","autoComplete","autoFocus","placeholder","movies","query","config","length","MoviesList","useState","setMovies","loading","setLoading","setConfig","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","fetchMovieByQuery","result","fetchConfig","console","warn","Loader"],"sourceRoot":""}